abilities=ColorScreen,MIDP=2.1,ScreenHeight=320,JSR226=1.0,JSR184=1.1,JSR82=1.1,JSR280=1.0,OBEX=1.0,SATSA=1.0,WMA=2.0,ScreenColorDepth=16,JSR239=1.0,JSR234=1.0,JSR179=1.0,JSR256=1.2,JSR257=1.0,JSR177=1.0,JSR211=1.0,CLDC=1.1,J2MEWS=1.0,ScreenWidth=240,MMAPI=1.2,TouchScreen,JSR172=1.0,JSR75=1.0,
all.configurations=\ ,DefaultConfigurationEmoji,NoObfuscation,NoObfuscationEmoji
application.args=
application.description=
application.description.detail=
application.name=
application.vendor=Vendor
build.classes.dir=${build.dir}/compiled
build.classes.excludes=**/*.java,**/*.form,**/*.class,**/.nbintdb,**/*.mvd,**/*.wsclient,**/*.vmd
build.dir=build/${config.active}
build.root.dir=build
configs.DefaultConfigurationEmoji.deployment.jarurl=http://vk4me.crx.moe/next/${dist.jar}
configs.DefaultConfigurationEmoji.deployment.override.jarurl=true
configs.DefaultConfigurationEmoji.dist.jad=latest-emoji.jad
configs.DefaultConfigurationEmoji.dist.jar=latest-emoji.jar
configs.DefaultConfigurationEmoji.filter.exclude.tests=false
configs.DefaultConfigurationEmoji.filter.excludes=
configs.DefaultConfigurationEmoji.filter.more.excludes=**/overview.html,**/package.html
configs.DefaultConfigurationEmoji.filter.use.standard=true
configs.DefaultConfigurationEmoji.jar.compress=true
configs.DefaultConfigurationEmoji.manifest.jad=
configs.DefaultConfigurationEmoji.manifest.manifest=
configs.DefaultConfigurationEmoji.manifest.others=MIDlet-Vendor: curoviyxru\nNokia-Scalable-Icon-MIDlet-1: /res/new/ph.svg\nMIDlet-Info-URL: http://vk4me.crx.moe/\nNokia-MIDlet-On-Screen-Keypad: no\nLGE-MIDlet-Display-Mode: both\nMIDlet-Name: VK4ME\nMIDlet-Icon: /res/new/phmini.png\nNokia-UI-Enhancement: MusicKeysSupported,CanvasHasBackground\nLGE-MIDlet-Width: 320\nMIDlet-Version: 3.3.3\nNokia-Scalable-Icon: /res/new/ph.svg\nLGE-MIDlet-Indicator: HIDE\nNokia-MIDlet-S60-Selection-Key-Compatibility: true\nNokia-MIDlet-Splash-Screen-Image: suppress\nLGE-MIDlet-TargetLCD-Width: 480\nNokia-MIDlet-No-Exit: true\nNokia-MIDlet-Background-Event: pause\nLGE-MIDlet-Height: 480\nNokia-MIDlet-Flip-Close: pause\nprogressive_download: enabled\nVK4ME-Has-Emojis: true\nLGE-MIDlet-TargetLCD-Height: 320\nMVM-Pause-Background: false\nLGE-MIDlet-On-Screen-Keypad: no\nMIDlet-Description: Unofficial client for Russian social network VK for devices supporting CLDC 1.1 and MIDP 2.0.\nLGE-MIDlet-Allowed-background: yes\n
configs.NoObfuscation.debug.level=error
configs.NoObfuscation.dist.jad=NOOBF-latest.jad
configs.NoObfuscation.dist.jar=NOOBF-latest.jar
configs.NoObfuscation.jar.compress=true
configs.NoObfuscation.javac.debug=true
configs.NoObfuscation.javac.deprecation=false
configs.NoObfuscation.javac.encoding=UTF-8
configs.NoObfuscation.javac.optimize=true
configs.NoObfuscation.obfuscation.custom=-target 1.4\n-optimizationpasses 9\n-defaultpackage ''\n-allowaccessmodification\n-mergeinterfacesaggressively\n-overloadaggressively\n-dontusemixedcaseclassnames\n-microedition\n\n\n# Keep - Midlets. Keep all extensions of javax.microedition.midlet.MIDlet.\n-keep public class * extends javax.microedition.midlet.MIDlet\n\n# Keep names - Native method names. Keep all native class/method names.\n-keepclasseswithmembers,allowshrinking class * {\n    native <methods>;\n}\n\n# Remove - System method calls. Remove all invocations of System\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.System {\n    public static long currentTimeMillis();\n    static java.lang.Class getCallerClass();\n    public static int identityHashCode(java.lang.Object);\n    public static java.lang.SecurityManager getSecurityManager();\n    public static java.util.Properties getProperties();\n    public static java.lang.String getProperty(java.lang.String);\n    public static java.lang.String getenv(java.lang.String);\n    public static java.lang.String mapLibraryName(java.lang.String);\n    public static java.lang.String getProperty(java.lang.String,java.lang.String);\n}\n\n# Remove - Math method calls. Remove all invocations of Math\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.Math {\n    public static double sin(double);\n    public static double cos(double);\n    public static double tan(double);\n    public static double asin(double);\n    public static double acos(double);\n    public static double atan(double);\n    public static double toRadians(double);\n    public static double toDegrees(double);\n    public static double exp(double);\n    public static double log(double);\n    public static double log10(double);\n    public static double sqrt(double);\n    public static double cbrt(double);\n    public static double IEEEremainder(double,double);\n    public static double ceil(double);\n    public static double floor(double);\n    public static double rint(double);\n    public static double atan2(double,double);\n    public static double pow(double,double);\n    public static int round(float);\n    public static long round(double);\n    public static double random();\n    public static int abs(int);\n    public static long abs(long);\n    public static float abs(float);\n    public static double abs(double);\n    public static int max(int,int);\n    public static long max(long,long);\n    public static float max(float,float);\n    public static double max(double,double);\n    public static int min(int,int);\n    public static long min(long,long);\n    public static float min(float,float);\n    public static double min(double,double);\n    public static double ulp(double);\n    public static float ulp(float);\n    public static double signum(double);\n    public static float signum(float);\n    public static double sinh(double);\n    public static double cosh(double);\n    public static double tanh(double);\n    public static double hypot(double,double);\n    public static double expm1(double);\n    public static double log1p(double);\n}\n\n# Remove - Number method calls. Remove all invocations of Number\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.* extends java.lang.Number {\n    public static java.lang.String toString(byte);\n    public static java.lang.Byte valueOf(byte);\n    public static byte parseByte(java.lang.String);\n    public static byte parseByte(java.lang.String,int);\n    public static java.lang.Byte valueOf(java.lang.String,int);\n    public static java.lang.Byte valueOf(java.lang.String);\n    public static java.lang.Byte decode(java.lang.String);\n    public int compareTo(java.lang.Byte);\n    public static java.lang.String toString(short);\n    public static short parseShort(java.lang.String);\n    public static short parseShort(java.lang.String,int);\n    public static java.lang.Short valueOf(java.lang.String,int);\n    public static java.lang.Short valueOf(java.lang.String);\n    public static java.lang.Short valueOf(short);\n    public static java.lang.Short decode(java.lang.String);\n    public static short reverseBytes(short);\n    public int compareTo(java.lang.Short);\n    public static java.lang.String toString(int,int);\n    public static java.lang.String toHexString(int);\n    public static java.lang.String toOctalString(int);\n    public static java.lang.String toBinaryString(int);\n    public static java.lang.String toString(int);\n    public static int parseInt(java.lang.String,int);\n    public static int parseInt(java.lang.String);\n    public static java.lang.Integer valueOf(java.lang.String,int);\n    public static java.lang.Integer valueOf(java.lang.String);\n    public static java.lang.Integer valueOf(int);\n    public static java.lang.Integer getInteger(java.lang.String);\n    public static java.lang.Integer getInteger(java.lang.String,int);\n    public static java.lang.Integer getInteger(java.lang.String,java.lang.Integer);\n    public static java.lang.Integer decode(java.lang.String);\n    public static int highestOneBit(int);\n    public static int lowestOneBit(int);\n    public static int numberOfLeadingZeros(int);\n    public static int numberOfTrailingZeros(int);\n    public static int bitCount(int);\n    public static int rotateLeft(int,int);\n    public static int rotateRight(int,int);\n    public static int reverse(int);\n    public static int signum(int);\n    public static int reverseBytes(int);\n    public int compareTo(java.lang.Integer);\n    public static java.lang.String toString(long,int);\n    public static java.lang.String toHexString(long);\n    public static java.lang.String toOctalString(long);\n    public static java.lang.String toBinaryString(long);\n    public static java.lang.String toString(long);\n    public static long parseLong(java.lang.String,int);\n    public static long parseLong(java.lang.String);\n    public static java.lang.Long valueOf(java.lang.String,int);\n    public static java.lang.Long valueOf(java.lang.String);\n    public static java.lang.Long valueOf(long);\n    public static java.lang.Long decode(java.lang.String);\n    public static java.lang.Long getLong(java.lang.String);\n    public static java.lang.Long getLong(java.lang.String,long);\n    public static java.lang.Long getLong(java.lang.String,java.lang.Long);\n    public static long highestOneBit(long);\n    public static long lowestOneBit(long);\n    public static int numberOfLeadingZeros(long);\n    public static int numberOfTrailingZeros(long);\n    public static int bitCount(long);\n    public static long rotateLeft(long,int);\n    public static long rotateRight(long,int);\n    public static long reverse(long);\n    public static int signum(long);\n    public static long reverseBytes(long);\n    public int compareTo(java.lang.Long);\n    public static java.lang.String toString(float);\n    public static java.lang.String toHexString(float);\n    public static java.lang.Float valueOf(java.lang.String);\n    public static java.lang.Float valueOf(float);\n    public static float parseFloat(java.lang.String);\n    public static boolean isNaN(float);\n    public static boolean isInfinite(float);\n    public static int floatToIntBits(float);\n    public static int floatToRawIntBits(float);\n    public static float intBitsToFloat(int);\n    public static int compare(float,float);\n    public boolean isNaN();\n    public boolean isInfinite();\n    public int compareTo(java.lang.Float);\n    public static java.lang.String toString(double);\n    public static java.lang.String toHexString(double);\n    public static java.lang.Double valueOf(java.lang.String);\n    public static java.lang.Double valueOf(double);\n    public static double parseDouble(java.lang.String);\n    public static boolean isNaN(double);\n    public static boolean isInfinite(double);\n    public static long doubleToLongBits(double);\n    public static long doubleToRawLongBits(double);\n    public static double longBitsToDouble(long);\n    public static int compare(double,double);\n    public boolean isNaN();\n    public boolean isInfinite();\n    public int compareTo(java.lang.Double);\n    public byte byteValue();\n    public short shortValue();\n    public int intValue();\n    public long longValue();\n    public float floatValue();\n    public double doubleValue();\n    public int compareTo(java.lang.Object);\n    public boolean equals(java.lang.Object);\n    public int hashCode();\n    public java.lang.String toString();\n}\n\n# Remove - String method calls. Remove all invocations of String\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.String {\n    public static java.lang.String copyValueOf(char[]);\n    public static java.lang.String copyValueOf(char[],int,int);\n    public static java.lang.String valueOf(boolean);\n    public static java.lang.String valueOf(char);\n    public static java.lang.String valueOf(char[]);\n    public static java.lang.String valueOf(char[],int,int);\n    public static java.lang.String valueOf(double);\n    public static java.lang.String valueOf(float);\n    public static java.lang.String valueOf(int);\n    public static java.lang.String valueOf(java.lang.Object);\n    public static java.lang.String valueOf(long);\n    public boolean contentEquals(java.lang.StringBuffer);\n    public boolean endsWith(java.lang.String);\n    public boolean equalsIgnoreCase(java.lang.String);\n    public boolean equals(java.lang.Object);\n    public boolean matches(java.lang.String);\n    public boolean regionMatches(boolean,int,java.lang.String,int,int);\n    public boolean regionMatches(int,java.lang.String,int,int);\n    public boolean startsWith(java.lang.String);\n    public boolean startsWith(java.lang.String,int);\n    public byte[] getBytes();\n    public byte[] getBytes(java.lang.String);\n    public char charAt(int);\n    public char[] toCharArray();\n    public int compareToIgnoreCase(java.lang.String);\n    public int compareTo(java.lang.Object);\n    public int compareTo(java.lang.String);\n    public int hashCode();\n    public int indexOf(int);\n    public int indexOf(int,int);\n    public int indexOf(java.lang.String);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(int);\n    public int lastIndexOf(int,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.CharSequence subSequence(int,int);\n    public java.lang.String concat(java.lang.String);\n    public java.lang.String replaceAll(java.lang.String,java.lang.String);\n    public java.lang.String replace(char,char);\n    public java.lang.String replaceFirst(java.lang.String,java.lang.String);\n    public java.lang.String[] split(java.lang.String);\n    public java.lang.String[] split(java.lang.String,int);\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n    public java.lang.String toLowerCase();\n    public java.lang.String toLowerCase(java.util.Locale);\n    public java.lang.String toString();\n    public java.lang.String toUpperCase();\n    public java.lang.String toUpperCase(java.util.Locale);\n    public java.lang.String trim();\n}\n\n# Remove - StringBuffer method calls. Remove all invocations of StringBuffer\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.StringBuffer {\n    public java.lang.String toString();\n    public char charAt(int);\n    public int capacity();\n    public int codePointAt(int);\n    public int codePointBefore(int);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n}\n\n# Remove - StringBuilder method calls. Remove all invocations of StringBuilder\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.StringBuilder {\n    public java.lang.String toString();\n    public char charAt(int);\n    public int capacity();\n    public int codePointAt(int);\n    public int codePointBefore(int);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n}\n\n# Remove debugging - Throwable_printStackTrace calls. Remove all invocations of\n# Throwable.printStackTrace().\n-assumenosideeffects public class java.lang.Throwable {\n    public void printStackTrace();\n}\n\n# Remove debugging - Thread_dumpStack calls. Remove all invocations of\n# Thread.dumpStack().\n-assumenosideeffects public class java.lang.Thread {\n    public static void dumpStack();\n}\n\n# Remove debugging - All logging API calls. Remove all invocations of the\n# logging API whose return values are not used.\n-assumenosideeffects public class java.util.logging.* {\n    <methods>;\n}\n\n# Remove debugging - All Log4j API calls. Remove all invocations of the\n# Log4j API whose return values are not used.\n-assumenosideeffects public class org.apache.log4j.** {\n    <methods>;\n}\n
configs.NoObfuscation.obfuscation.level=0
configs.NoObfuscationEmoji.debug.level=error
configs.NoObfuscationEmoji.deployment.jarurl=http://vk4me.crx.moe/next/${dist.jar}
configs.NoObfuscationEmoji.deployment.override.jarurl=true
configs.NoObfuscationEmoji.dist.jad=NOOBF-latest-emoji.jad
configs.NoObfuscationEmoji.dist.jar=NOOBF-latest-emoji.jar
configs.NoObfuscationEmoji.filter.exclude.tests=false
configs.NoObfuscationEmoji.filter.excludes=
configs.NoObfuscationEmoji.filter.more.excludes=**/overview.html,**/package.html
configs.NoObfuscationEmoji.filter.use.standard=true
configs.NoObfuscationEmoji.jar.compress=true
configs.NoObfuscationEmoji.javac.debug=true
configs.NoObfuscationEmoji.javac.deprecation=false
configs.NoObfuscationEmoji.javac.encoding=UTF-8
configs.NoObfuscationEmoji.javac.optimize=true
configs.NoObfuscationEmoji.manifest.jad=
configs.NoObfuscationEmoji.manifest.manifest=
configs.NoObfuscationEmoji.manifest.others=MIDlet-Vendor: curoviyxru\nNokia-Scalable-Icon-MIDlet-1: /res/new/ph.svg\nMIDlet-Info-URL: http://vk4me.crx.moe/\nNokia-MIDlet-On-Screen-Keypad: no\nLGE-MIDlet-Display-Mode: both\nMIDlet-Name: VK4ME\nMIDlet-Icon: /res/new/phmini.png\nNokia-UI-Enhancement: MusicKeysSupported,CanvasHasBackground\nLGE-MIDlet-Width: 320\nMIDlet-Version: 3.3.3\nNokia-Scalable-Icon: /res/new/ph.svg\nLGE-MIDlet-Indicator: HIDE\nNokia-MIDlet-S60-Selection-Key-Compatibility: true\nNokia-MIDlet-Splash-Screen-Image: suppress\nLGE-MIDlet-TargetLCD-Width: 480\nNokia-MIDlet-No-Exit: true\nNokia-MIDlet-Background-Event: pause\nLGE-MIDlet-Height: 480\nNokia-MIDlet-Flip-Close: pause\nprogressive_download: enabled\nVK4ME-Has-Emojis: true\nLGE-MIDlet-TargetLCD-Height: 320\nMVM-Pause-Background: false\nLGE-MIDlet-On-Screen-Keypad: no\nMIDlet-Description: Unofficial client for Russian social network VK for devices supporting CLDC 1.1 and MIDP 2.0.\nLGE-MIDlet-Allowed-background: yes\n
configs.NoObfuscationEmoji.obfuscation.custom=-target 1.4\n-optimizationpasses 9\n-defaultpackage ''\n-allowaccessmodification\n-mergeinterfacesaggressively\n-overloadaggressively\n-dontusemixedcaseclassnames\n-microedition\n\n\n# Keep - Midlets. Keep all extensions of javax.microedition.midlet.MIDlet.\n-keep public class * extends javax.microedition.midlet.MIDlet\n\n# Keep names - Native method names. Keep all native class/method names.\n-keepclasseswithmembers,allowshrinking class * {\n    native <methods>;\n}\n\n# Remove - System method calls. Remove all invocations of System\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.System {\n    public static long currentTimeMillis();\n    static java.lang.Class getCallerClass();\n    public static int identityHashCode(java.lang.Object);\n    public static java.lang.SecurityManager getSecurityManager();\n    public static java.util.Properties getProperties();\n    public static java.lang.String getProperty(java.lang.String);\n    public static java.lang.String getenv(java.lang.String);\n    public static java.lang.String mapLibraryName(java.lang.String);\n    public static java.lang.String getProperty(java.lang.String,java.lang.String);\n}\n\n# Remove - Math method calls. Remove all invocations of Math\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.Math {\n    public static double sin(double);\n    public static double cos(double);\n    public static double tan(double);\n    public static double asin(double);\n    public static double acos(double);\n    public static double atan(double);\n    public static double toRadians(double);\n    public static double toDegrees(double);\n    public static double exp(double);\n    public static double log(double);\n    public static double log10(double);\n    public static double sqrt(double);\n    public static double cbrt(double);\n    public static double IEEEremainder(double,double);\n    public static double ceil(double);\n    public static double floor(double);\n    public static double rint(double);\n    public static double atan2(double,double);\n    public static double pow(double,double);\n    public static int round(float);\n    public static long round(double);\n    public static double random();\n    public static int abs(int);\n    public static long abs(long);\n    public static float abs(float);\n    public static double abs(double);\n    public static int max(int,int);\n    public static long max(long,long);\n    public static float max(float,float);\n    public static double max(double,double);\n    public static int min(int,int);\n    public static long min(long,long);\n    public static float min(float,float);\n    public static double min(double,double);\n    public static double ulp(double);\n    public static float ulp(float);\n    public static double signum(double);\n    public static float signum(float);\n    public static double sinh(double);\n    public static double cosh(double);\n    public static double tanh(double);\n    public static double hypot(double,double);\n    public static double expm1(double);\n    public static double log1p(double);\n}\n\n# Remove - Number method calls. Remove all invocations of Number\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.* extends java.lang.Number {\n    public static java.lang.String toString(byte);\n    public static java.lang.Byte valueOf(byte);\n    public static byte parseByte(java.lang.String);\n    public static byte parseByte(java.lang.String,int);\n    public static java.lang.Byte valueOf(java.lang.String,int);\n    public static java.lang.Byte valueOf(java.lang.String);\n    public static java.lang.Byte decode(java.lang.String);\n    public int compareTo(java.lang.Byte);\n    public static java.lang.String toString(short);\n    public static short parseShort(java.lang.String);\n    public static short parseShort(java.lang.String,int);\n    public static java.lang.Short valueOf(java.lang.String,int);\n    public static java.lang.Short valueOf(java.lang.String);\n    public static java.lang.Short valueOf(short);\n    public static java.lang.Short decode(java.lang.String);\n    public static short reverseBytes(short);\n    public int compareTo(java.lang.Short);\n    public static java.lang.String toString(int,int);\n    public static java.lang.String toHexString(int);\n    public static java.lang.String toOctalString(int);\n    public static java.lang.String toBinaryString(int);\n    public static java.lang.String toString(int);\n    public static int parseInt(java.lang.String,int);\n    public static int parseInt(java.lang.String);\n    public static java.lang.Integer valueOf(java.lang.String,int);\n    public static java.lang.Integer valueOf(java.lang.String);\n    public static java.lang.Integer valueOf(int);\n    public static java.lang.Integer getInteger(java.lang.String);\n    public static java.lang.Integer getInteger(java.lang.String,int);\n    public static java.lang.Integer getInteger(java.lang.String,java.lang.Integer);\n    public static java.lang.Integer decode(java.lang.String);\n    public static int highestOneBit(int);\n    public static int lowestOneBit(int);\n    public static int numberOfLeadingZeros(int);\n    public static int numberOfTrailingZeros(int);\n    public static int bitCount(int);\n    public static int rotateLeft(int,int);\n    public static int rotateRight(int,int);\n    public static int reverse(int);\n    public static int signum(int);\n    public static int reverseBytes(int);\n    public int compareTo(java.lang.Integer);\n    public static java.lang.String toString(long,int);\n    public static java.lang.String toHexString(long);\n    public static java.lang.String toOctalString(long);\n    public static java.lang.String toBinaryString(long);\n    public static java.lang.String toString(long);\n    public static long parseLong(java.lang.String,int);\n    public static long parseLong(java.lang.String);\n    public static java.lang.Long valueOf(java.lang.String,int);\n    public static java.lang.Long valueOf(java.lang.String);\n    public static java.lang.Long valueOf(long);\n    public static java.lang.Long decode(java.lang.String);\n    public static java.lang.Long getLong(java.lang.String);\n    public static java.lang.Long getLong(java.lang.String,long);\n    public static java.lang.Long getLong(java.lang.String,java.lang.Long);\n    public static long highestOneBit(long);\n    public static long lowestOneBit(long);\n    public static int numberOfLeadingZeros(long);\n    public static int numberOfTrailingZeros(long);\n    public static int bitCount(long);\n    public static long rotateLeft(long,int);\n    public static long rotateRight(long,int);\n    public static long reverse(long);\n    public static int signum(long);\n    public static long reverseBytes(long);\n    public int compareTo(java.lang.Long);\n    public static java.lang.String toString(float);\n    public static java.lang.String toHexString(float);\n    public static java.lang.Float valueOf(java.lang.String);\n    public static java.lang.Float valueOf(float);\n    public static float parseFloat(java.lang.String);\n    public static boolean isNaN(float);\n    public static boolean isInfinite(float);\n    public static int floatToIntBits(float);\n    public static int floatToRawIntBits(float);\n    public static float intBitsToFloat(int);\n    public static int compare(float,float);\n    public boolean isNaN();\n    public boolean isInfinite();\n    public int compareTo(java.lang.Float);\n    public static java.lang.String toString(double);\n    public static java.lang.String toHexString(double);\n    public static java.lang.Double valueOf(java.lang.String);\n    public static java.lang.Double valueOf(double);\n    public static double parseDouble(java.lang.String);\n    public static boolean isNaN(double);\n    public static boolean isInfinite(double);\n    public static long doubleToLongBits(double);\n    public static long doubleToRawLongBits(double);\n    public static double longBitsToDouble(long);\n    public static int compare(double,double);\n    public boolean isNaN();\n    public boolean isInfinite();\n    public int compareTo(java.lang.Double);\n    public byte byteValue();\n    public short shortValue();\n    public int intValue();\n    public long longValue();\n    public float floatValue();\n    public double doubleValue();\n    public int compareTo(java.lang.Object);\n    public boolean equals(java.lang.Object);\n    public int hashCode();\n    public java.lang.String toString();\n}\n\n# Remove - String method calls. Remove all invocations of String\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.String {\n    public static java.lang.String copyValueOf(char[]);\n    public static java.lang.String copyValueOf(char[],int,int);\n    public static java.lang.String valueOf(boolean);\n    public static java.lang.String valueOf(char);\n    public static java.lang.String valueOf(char[]);\n    public static java.lang.String valueOf(char[],int,int);\n    public static java.lang.String valueOf(double);\n    public static java.lang.String valueOf(float);\n    public static java.lang.String valueOf(int);\n    public static java.lang.String valueOf(java.lang.Object);\n    public static java.lang.String valueOf(long);\n    public boolean contentEquals(java.lang.StringBuffer);\n    public boolean endsWith(java.lang.String);\n    public boolean equalsIgnoreCase(java.lang.String);\n    public boolean equals(java.lang.Object);\n    public boolean matches(java.lang.String);\n    public boolean regionMatches(boolean,int,java.lang.String,int,int);\n    public boolean regionMatches(int,java.lang.String,int,int);\n    public boolean startsWith(java.lang.String);\n    public boolean startsWith(java.lang.String,int);\n    public byte[] getBytes();\n    public byte[] getBytes(java.lang.String);\n    public char charAt(int);\n    public char[] toCharArray();\n    public int compareToIgnoreCase(java.lang.String);\n    public int compareTo(java.lang.Object);\n    public int compareTo(java.lang.String);\n    public int hashCode();\n    public int indexOf(int);\n    public int indexOf(int,int);\n    public int indexOf(java.lang.String);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(int);\n    public int lastIndexOf(int,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.CharSequence subSequence(int,int);\n    public java.lang.String concat(java.lang.String);\n    public java.lang.String replaceAll(java.lang.String,java.lang.String);\n    public java.lang.String replace(char,char);\n    public java.lang.String replaceFirst(java.lang.String,java.lang.String);\n    public java.lang.String[] split(java.lang.String);\n    public java.lang.String[] split(java.lang.String,int);\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n    public java.lang.String toLowerCase();\n    public java.lang.String toLowerCase(java.util.Locale);\n    public java.lang.String toString();\n    public java.lang.String toUpperCase();\n    public java.lang.String toUpperCase(java.util.Locale);\n    public java.lang.String trim();\n}\n\n# Remove - StringBuffer method calls. Remove all invocations of StringBuffer\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.StringBuffer {\n    public java.lang.String toString();\n    public char charAt(int);\n    public int capacity();\n    public int codePointAt(int);\n    public int codePointBefore(int);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n}\n\n# Remove - StringBuilder method calls. Remove all invocations of StringBuilder\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.StringBuilder {\n    public java.lang.String toString();\n    public char charAt(int);\n    public int capacity();\n    public int codePointAt(int);\n    public int codePointBefore(int);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n}\n\n# Remove debugging - Throwable_printStackTrace calls. Remove all invocations of\n# Throwable.printStackTrace().\n-assumenosideeffects public class java.lang.Throwable {\n    public void printStackTrace();\n}\n\n# Remove debugging - Thread_dumpStack calls. Remove all invocations of\n# Thread.dumpStack().\n-assumenosideeffects public class java.lang.Thread {\n    public static void dumpStack();\n}\n\n# Remove debugging - All logging API calls. Remove all invocations of the\n# logging API whose return values are not used.\n-assumenosideeffects public class java.util.logging.* {\n    <methods>;\n}\n\n# Remove debugging - All Log4j API calls. Remove all invocations of the\n# Log4j API whose return values are not used.\n-assumenosideeffects public class org.apache.log4j.** {\n    <methods>;\n}\n
configs.NoObfuscationEmoji.obfuscation.level=0
debug.level=error
debugger.timeout=
deployment.copy.target=deploy
deployment.instance=default
deployment.jarurl=http://vk4me.crx.moe/next/${dist.jar}
deployment.method=NokiaDeployment
deployment.override.jarurl=true
dist.dir=dist/${config.active}
dist.jad=latest.jad
dist.jar=latest.jar
dist.javadoc.dir=${dist.dir}/doc
dist.root.dir=dist
extra.classpath=${file.reference.nokiaui.jar}
file.reference.nokiaui.jar=nokiaui.jar
filter.exclude.tests=false
filter.excludes=res/emoji,res/emoji/**
filter.more.excludes=**/overview.html,**/package.html
filter.use.standard=true
jar.compress=true
javac.debug=false
javac.deprecation=false
javac.encoding=UTF-8
javac.optimize=true
javac.source=1.3
javac.target=1.3
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
libs.classpath=${file.reference.nokiaui.jar};${reference.json-org.jar};${reference.j2vk.jar}
main.class=
main.class.class=applet
manifest.apipermissions=MIDlet-Permissions-Opt: javax.microedition.io.Connector.file.read, javax.microedition.io.Connector.http, javax.microedition.io.Connector.file.write, javax.microedition.io.Connector.https, javax.microedition.io.Connector.ssl\n
manifest.file=manifest.mf
manifest.is.liblet=false
manifest.jad=
manifest.manifest=
manifest.midlets=MIDlet-1: VK4ME,/res/new/phmini.png,ru.curoviyxru.phoenix.midlet.Midlet\n
manifest.others=MIDlet-Vendor: curoviyxru\nNokia-Scalable-Icon-MIDlet-1: /res/new/ph.svg\nMIDlet-Info-URL: http://vk4me.crx.moe/\nNokia-MIDlet-On-Screen-Keypad: no\nLGE-MIDlet-Display-Mode: both\nMIDlet-Name: VK4ME\nMIDlet-Icon: /res/new/phmini.png\nNokia-UI-Enhancement: MusicKeysSupported,CanvasHasBackground\nLGE-MIDlet-Width: 320\nMIDlet-Version: 3.3.3\nNokia-Scalable-Icon: /res/new/ph.svg\nLGE-MIDlet-Indicator: HIDE\nNokia-MIDlet-S60-Selection-Key-Compatibility: true\nNokia-MIDlet-Splash-Screen-Image: suppress\nLGE-MIDlet-TargetLCD-Width: 480\nNokia-MIDlet-No-Exit: true\nNokia-MIDlet-Background-Event: pause\nLGE-MIDlet-Height: 480\nNokia-MIDlet-Flip-Close: pause\nprogressive_download: enabled\nLGE-MIDlet-TargetLCD-Height: 320\nNokia-MIDlet-UID-1: 0xA26C935F\nMVM-Pause-Background: false\nLGE-MIDlet-On-Screen-Keypad: no\nMIDlet-Description: Unofficial client for Russian social network VK for devices supporting CLDC 1.1 and MIDP 2.0.\nLGE-MIDlet-Allowed-background: yes\n
manifest.pushregistry=
name=pheonix
no.dependencies=false
nokiaS80.application.icon=
obfuscated.classes.dir=${build.dir}/obfuscated
obfuscation.custom=-target 1.4\n#-optimizationpasses 2\n-defaultpackage ''\n#-allowaccessmodification\n# -mergeinterfacesaggressively\n-overloadaggressively\n-dontusemixedcaseclassnames\n-microedition\n\n\n# Keep - Midlets. Keep all extensions of javax.microedition.midlet.MIDlet.\n-keep public class * extends javax.microedition.midlet.MIDlet\n\n# Keep names - Native method names. Keep all native class/method names.\n-keepclasseswithmembers,allowshrinking class * {\n    native <methods>;\n}\n\n# Remove - System method calls. Remove all invocations of System\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.System {\n    public static long currentTimeMillis();\n    static java.lang.Class getCallerClass();\n    public static int identityHashCode(java.lang.Object);\n    public static java.lang.SecurityManager getSecurityManager();\n    public static java.util.Properties getProperties();\n    public static java.lang.String getProperty(java.lang.String);\n    public static java.lang.String getenv(java.lang.String);\n    public static java.lang.String mapLibraryName(java.lang.String);\n    public static java.lang.String getProperty(java.lang.String,java.lang.String);\n}\n\n# Remove - Math method calls. Remove all invocations of Math\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.Math {\n    public static double sin(double);\n    public static double cos(double);\n    public static double tan(double);\n    public static double asin(double);\n    public static double acos(double);\n    public static double atan(double);\n    public static double toRadians(double);\n    public static double toDegrees(double);\n    public static double exp(double);\n    public static double log(double);\n    public static double log10(double);\n    public static double sqrt(double);\n    public static double cbrt(double);\n    public static double IEEEremainder(double,double);\n    public static double ceil(double);\n    public static double floor(double);\n    public static double rint(double);\n    public static double atan2(double,double);\n    public static double pow(double,double);\n    public static int round(float);\n    public static long round(double);\n    public static double random();\n    public static int abs(int);\n    public static long abs(long);\n    public static float abs(float);\n    public static double abs(double);\n    public static int max(int,int);\n    public static long max(long,long);\n    public static float max(float,float);\n    public static double max(double,double);\n    public static int min(int,int);\n    public static long min(long,long);\n    public static float min(float,float);\n    public static double min(double,double);\n    public static double ulp(double);\n    public static float ulp(float);\n    public static double signum(double);\n    public static float signum(float);\n    public static double sinh(double);\n    public static double cosh(double);\n    public static double tanh(double);\n    public static double hypot(double,double);\n    public static double expm1(double);\n    public static double log1p(double);\n}\n\n# Remove - Number method calls. Remove all invocations of Number\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.* extends java.lang.Number {\n    public static java.lang.String toString(byte);\n    public static java.lang.Byte valueOf(byte);\n    public static byte parseByte(java.lang.String);\n    public static byte parseByte(java.lang.String,int);\n    public static java.lang.Byte valueOf(java.lang.String,int);\n    public static java.lang.Byte valueOf(java.lang.String);\n    public static java.lang.Byte decode(java.lang.String);\n    public int compareTo(java.lang.Byte);\n    public static java.lang.String toString(short);\n    public static short parseShort(java.lang.String);\n    public static short parseShort(java.lang.String,int);\n    public static java.lang.Short valueOf(java.lang.String,int);\n    public static java.lang.Short valueOf(java.lang.String);\n    public static java.lang.Short valueOf(short);\n    public static java.lang.Short decode(java.lang.String);\n    public static short reverseBytes(short);\n    public int compareTo(java.lang.Short);\n    public static java.lang.String toString(int,int);\n    public static java.lang.String toHexString(int);\n    public static java.lang.String toOctalString(int);\n    public static java.lang.String toBinaryString(int);\n    public static java.lang.String toString(int);\n    public static int parseInt(java.lang.String,int);\n    public static int parseInt(java.lang.String);\n    public static java.lang.Integer valueOf(java.lang.String,int);\n    public static java.lang.Integer valueOf(java.lang.String);\n    public static java.lang.Integer valueOf(int);\n    public static java.lang.Integer getInteger(java.lang.String);\n    public static java.lang.Integer getInteger(java.lang.String,int);\n    public static java.lang.Integer getInteger(java.lang.String,java.lang.Integer);\n    public static java.lang.Integer decode(java.lang.String);\n    public static int highestOneBit(int);\n    public static int lowestOneBit(int);\n    public static int numberOfLeadingZeros(int);\n    public static int numberOfTrailingZeros(int);\n    public static int bitCount(int);\n    public static int rotateLeft(int,int);\n    public static int rotateRight(int,int);\n    public static int reverse(int);\n    public static int signum(int);\n    public static int reverseBytes(int);\n    public int compareTo(java.lang.Integer);\n    public static java.lang.String toString(long,int);\n    public static java.lang.String toHexString(long);\n    public static java.lang.String toOctalString(long);\n    public static java.lang.String toBinaryString(long);\n    public static java.lang.String toString(long);\n    public static long parseLong(java.lang.String,int);\n    public static long parseLong(java.lang.String);\n    public static java.lang.Long valueOf(java.lang.String,int);\n    public static java.lang.Long valueOf(java.lang.String);\n    public static java.lang.Long valueOf(long);\n    public static java.lang.Long decode(java.lang.String);\n    public static java.lang.Long getLong(java.lang.String);\n    public static java.lang.Long getLong(java.lang.String,long);\n    public static java.lang.Long getLong(java.lang.String,java.lang.Long);\n    public static long highestOneBit(long);\n    public static long lowestOneBit(long);\n    public static int numberOfLeadingZeros(long);\n    public static int numberOfTrailingZeros(long);\n    public static int bitCount(long);\n    public static long rotateLeft(long,int);\n    public static long rotateRight(long,int);\n    public static long reverse(long);\n    public static int signum(long);\n    public static long reverseBytes(long);\n    public int compareTo(java.lang.Long);\n    public static java.lang.String toString(float);\n    public static java.lang.String toHexString(float);\n    public static java.lang.Float valueOf(java.lang.String);\n    public static java.lang.Float valueOf(float);\n    public static float parseFloat(java.lang.String);\n    public static boolean isNaN(float);\n    public static boolean isInfinite(float);\n    public static int floatToIntBits(float);\n    public static int floatToRawIntBits(float);\n    public static float intBitsToFloat(int);\n    public static int compare(float,float);\n    public boolean isNaN();\n    public boolean isInfinite();\n    public int compareTo(java.lang.Float);\n    public static java.lang.String toString(double);\n    public static java.lang.String toHexString(double);\n    public static java.lang.Double valueOf(java.lang.String);\n    public static java.lang.Double valueOf(double);\n    public static double parseDouble(java.lang.String);\n    public static boolean isNaN(double);\n    public static boolean isInfinite(double);\n    public static long doubleToLongBits(double);\n    public static long doubleToRawLongBits(double);\n    public static double longBitsToDouble(long);\n    public static int compare(double,double);\n    public boolean isNaN();\n    public boolean isInfinite();\n    public int compareTo(java.lang.Double);\n    public byte byteValue();\n    public short shortValue();\n    public int intValue();\n    public long longValue();\n    public float floatValue();\n    public double doubleValue();\n    public int compareTo(java.lang.Object);\n    public boolean equals(java.lang.Object);\n    public int hashCode();\n    public java.lang.String toString();\n}\n\n# Remove - String method calls. Remove all invocations of String\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.String {\n    public static java.lang.String copyValueOf(char[]);\n    public static java.lang.String copyValueOf(char[],int,int);\n    public static java.lang.String valueOf(boolean);\n    public static java.lang.String valueOf(char);\n    public static java.lang.String valueOf(char[]);\n    public static java.lang.String valueOf(char[],int,int);\n    public static java.lang.String valueOf(double);\n    public static java.lang.String valueOf(float);\n    public static java.lang.String valueOf(int);\n    public static java.lang.String valueOf(java.lang.Object);\n    public static java.lang.String valueOf(long);\n    public boolean contentEquals(java.lang.StringBuffer);\n    public boolean endsWith(java.lang.String);\n    public boolean equalsIgnoreCase(java.lang.String);\n    public boolean equals(java.lang.Object);\n    public boolean matches(java.lang.String);\n    public boolean regionMatches(boolean,int,java.lang.String,int,int);\n    public boolean regionMatches(int,java.lang.String,int,int);\n    public boolean startsWith(java.lang.String);\n    public boolean startsWith(java.lang.String,int);\n    public byte[] getBytes();\n    public byte[] getBytes(java.lang.String);\n    public char charAt(int);\n    public char[] toCharArray();\n    public int compareToIgnoreCase(java.lang.String);\n    public int compareTo(java.lang.Object);\n    public int compareTo(java.lang.String);\n    public int hashCode();\n    public int indexOf(int);\n    public int indexOf(int,int);\n    public int indexOf(java.lang.String);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(int);\n    public int lastIndexOf(int,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.CharSequence subSequence(int,int);\n    public java.lang.String concat(java.lang.String);\n    public java.lang.String replaceAll(java.lang.String,java.lang.String);\n    public java.lang.String replace(char,char);\n    public java.lang.String replaceFirst(java.lang.String,java.lang.String);\n    public java.lang.String[] split(java.lang.String);\n    public java.lang.String[] split(java.lang.String,int);\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n    public java.lang.String toLowerCase();\n    public java.lang.String toLowerCase(java.util.Locale);\n    public java.lang.String toString();\n    public java.lang.String toUpperCase();\n    public java.lang.String toUpperCase(java.util.Locale);\n    public java.lang.String trim();\n}\n\n# Remove - StringBuffer method calls. Remove all invocations of StringBuffer\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.StringBuffer {\n    public java.lang.String toString();\n    public char charAt(int);\n    public int capacity();\n    public int codePointAt(int);\n    public int codePointBefore(int);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n}\n\n# Remove - StringBuilder method calls. Remove all invocations of StringBuilder\n# methods without side effects whose return values are not used.\n-assumenosideeffects public class java.lang.StringBuilder {\n    public java.lang.String toString();\n    public char charAt(int);\n    public int capacity();\n    public int codePointAt(int);\n    public int codePointBefore(int);\n    public int indexOf(java.lang.String,int);\n    public int lastIndexOf(java.lang.String);\n    public int lastIndexOf(java.lang.String,int);\n    public int length();\n    public java.lang.String substring(int);\n    public java.lang.String substring(int,int);\n}\n\n# Remove debugging - Throwable_printStackTrace calls. Remove all invocations of\n# Throwable.printStackTrace().\n-assumenosideeffects public class java.lang.Throwable {\n    public void printStackTrace();\n}\n\n# Remove debugging - Thread_dumpStack calls. Remove all invocations of\n# Thread.dumpStack().\n-assumenosideeffects public class java.lang.Thread {\n    public static void dumpStack();\n}\n\n# Remove debugging - All logging API calls. Remove all invocations of the\n# logging API whose return values are not used.\n-assumenosideeffects public class java.util.logging.* {\n    <methods>;\n}\n\n# Remove debugging - All Log4j API calls. Remove all invocations of the\n# Log4j API whose return values are not used.\n-assumenosideeffects public class org.apache.log4j.** {\n    <methods>;\n}\n
obfuscation.level=1
obfuscator.destjar=${build.dir}/obfuscated.jar
obfuscator.srcjar=${build.dir}/before-obfuscation.jar
platform.active=Oracle_Java_TM__Platform_Micro_Edition_SDK_3_4
platform.active.description=Oracle Java(TM) Platform Micro Edition SDK 3.4
platform.apis=WMA-2.0,MMAPI-1.2,JSR211-1.0,JSR82-1.1,JSR177-1.0,JSR179-1.0,JSR234-1.0,JSR257-1.0,J2ME-WS-1.0,JSR239-1.0,JSR256-1.2,JSR226-1.0,JSR280-1.0,JSR75-1.0,JSR184-1.1
platform.bootclasspath=${platform.home}/lib/jsr172_1.0.jar:${platform.home}/lib/jsr234_1.0.jar:${platform.home}/lib/jsr135_1.2.jar:${platform.home}/lib/jsr239_1.0.jar:${platform.home}/lib/jsr75_1.0.jar:${platform.home}/lib/jsr211_1.0.jar:${platform.home}/lib/jsr177_1.0.jar:${platform.home}/lib/jsr257_1.0.jar:${platform.home}/lib/jsr184_1.1.jar:${platform.home}/lib/jsr226_1.0.jar:${platform.home}/lib/jsr205_2.0.jar:${platform.home}/lib/jsr082_1.1.jar:${platform.home}/lib/jsr179_1.0.jar:${platform.home}/lib/jsr256_1.2.jar:${platform.home}/lib/jsr280_1.0.jar:${platform.home}/lib/midp_2.0.jar:${platform.home}/lib/cldc_1.1.jar
platform.configuration=CLDC-1.1
platform.device=JavaMEPhone1
platform.fat.jar=true
platform.profile=MIDP-2.0
platform.trigger=CLDC
platform.type=UEI-1.0.1
preprocessed.dir=${build.dir}/preprocessed
preverify.classes.dir=${build.dir}/preverified
preverify.sources.dir=${build.dir}/preverifysrc
project.j2vk=j2vk
project.json-org=j2vk/json-org
reference.j2vk.jar=${project.j2vk}/dist/j2vk.jar
reference.json-org.jar=${project.json-org}/dist/json-org.jar
resources.dir=resources
run.cmd.options=
run.jvmargs=
run.method=STANDARD
run.security.domain=minimum
run.use.security.domain=false
savaje.application.icon=
savaje.application.icon.focused=
savaje.application.icon.small=
savaje.application.uid=TBD
savaje.bundle.base=
savaje.bundle.debug=false
savaje.bundle.debug.port=
semc.application.caps=
semc.application.icon=
semc.application.icon.count=
semc.application.icon.splash=
semc.application.icon.splash.installonly=false
semc.application.uid=E8856173
semc.certificate.path=
semc.private.key.password=
semc.private.key.path=
sign.alias=
sign.enabled=false
sign.keystore=
src.dir=src
use.emptyapis=true
use.preprocessor=true
